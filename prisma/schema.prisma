generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id             String  @id
  name           String
  yocoPublicKey  String
  yocoPrivateKey String
  orders         Order[]
}

model Session {
  id         String    @id @default(cuid())
  merchantId String
  createdAt  DateTime
  basket     Basket[]
  Student    Student[]
}

model User {
  id           String @id @default(cuid())
  firstName    String
  lastName     String
  email        String
  passwordHash String
}

model Basket {
  id        String  @id @default(cuid())
  sessionId String
  productId String
  studentId String
  menuId    String
  dateId    String
  quantity  Int
  session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Basket_sessionId_fkey")
  @@index([studentId], map: "Basket_studentId_fkey")
}

model Order {
  id                String       @id
  createdAt         DateTime
  merchantId        String
  paymentId         String
  quantity          Int          @default(0)
  totalInCents      Int          @default(0)
  students          Int          @default(0)
  customerFirstName String       @default("")
  customerLastName  String       @default("")
  customerEmail     String       @default("")
  merchant          Merchant     @relation(fields: [merchantId], references: [id])
  items             OrderItem[]
  batches           OrderBatch[]

  @@index([merchantId], map: "Order_merchantId_fkey")
}

model OrderBatch {
  id               String      @id @default(cuid())
  orderId          String
  dateId           String
  menuId           String
  studentFirstName String
  studentLastName  String
  studentGrade     String
  order            Order       @relation(fields: [orderId], references: [id])
  items            OrderItem[]
}

model OrderItem {
  id                  String     @id @default(cuid())
  orderId             String
  orderBatchId        String
  productId           String
  quantity            Int
  pricePerItemInCents Int
  order               Order      @relation(fields: [orderId], references: [id])
  batch               OrderBatch @relation(fields: [orderBatchId], references: [id])

  @@index([orderId], map: "OrderItem_orderId_fkey")
}

model Student {
  id        String   @id @default(cuid())
  sessionId String
  firstName String
  lastName  String
  grade     String
  basket    Basket[]
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Student_sessionId_fkey")
}
