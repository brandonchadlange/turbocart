generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id             String          @id
  name           String
  clerkId        String          @default("")
  strategy       String          @default("")
  Category       Category[]
  Filter         Filter[]
  Listing        Listing[]
  Menu           Menu[]
  orders         Order[]
  paymentMethods PaymentMethod[]
}

model PaymentMethod {
  id            String   @id @default(cuid())
  merchantId    String
  name          String
  description   String
  provider      String
  enabled       Boolean
  configuration String
  merchant      Merchant @relation(fields: [merchantId], references: [id])

  @@index([merchantId], map: "PaymentMethod_merchantId_fkey")
}

model Session {
  id                String    @id @default(cuid())
  merchantId        String
  createdAt         DateTime
  customerEmail     String    @default("")
  customerFirstName String    @default("")
  customerLastName  String    @default("")
  rememberDetails   Boolean   @default(false)
  basket            Basket[]
  Student           Student[]
}

model Basket {
  id        String  @id @default(cuid())
  sessionId String
  productId String
  studentId String
  menuId    String
  dateId    String
  quantity  Int
  variantId String
  session   Session @relation(fields: [sessionId], references: [id], onDelete: Cascade)
  student   Student @relation(fields: [studentId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Basket_sessionId_fkey")
  @@index([studentId], map: "Basket_studentId_fkey")
}

model Order {
  id                String       @id
  createdAt         DateTime
  merchantId        String
  paymentId         String
  quantity          Int          @default(0)
  totalInCents      Int          @default(0)
  students          Int          @default(0)
  customerEmail     String       @default("")
  customerFirstName String       @default("")
  customerLastName  String       @default("")
  completeBatches   Int          @default(0)
  totalBatches      Int          @default(0)
  serviceFeeInCents Int          @default(0)
  isComplete        Boolean      @default(false)
  notes             String?
  merchant          Merchant     @relation(fields: [merchantId], references: [id])
  batches           OrderBatch[]
  items             OrderItem[]

  @@index([merchantId], map: "Order_merchantId_fkey")
}

model OrderBatch {
  id               String      @id @default(cuid())
  orderId          String
  dateId           String
  menuId           String
  studentFirstName String
  studentLastName  String
  studentGrade     String
  fulfilled        Boolean     @default(false)
  order            Order       @relation(fields: [orderId], references: [id])
  items            OrderItem[]

  @@index([orderId], map: "OrderBatch_orderId_fkey")
}

model OrderItem {
  id                  String     @id @default(cuid())
  orderId             String
  productId           String
  quantity            Int
  pricePerItemInCents Int
  orderBatchId        String
  packed              Boolean    @default(false)
  variantId           String
  batch               OrderBatch @relation(fields: [orderBatchId], references: [id])
  order               Order      @relation(fields: [orderId], references: [id])

  @@index([orderId], map: "OrderItem_orderId_fkey")
  @@index([orderBatchId], map: "OrderItem_orderBatchId_fkey")
}

model Student {
  id        String   @id @default(cuid())
  sessionId String
  firstName String
  lastName  String
  grade     String
  basket    Basket[]
  session   Session  @relation(fields: [sessionId], references: [id], onDelete: Cascade)

  @@index([sessionId], map: "Student_sessionId_fkey")
}

model Category {
  id              String            @id @default(cuid())
  merchantId      String
  name            String
  Merchant        Merchant          @relation(fields: [merchantId], references: [id])
  listingCategory ListingCategory[]
  menuCategory    MenuCategory[]

  @@index([merchantId], map: "Category_merchantId_fkey")
}

model Menu {
  id           String         @id
  merchantId   String
  name         String
  merchant     Merchant       @relation(fields: [merchantId], references: [id])
  menuCategory MenuCategory[]

  @@index([merchantId], map: "Menu_merchantId_fkey")
}

model MenuCategory {
  menuId     String
  categoryId String
  rank       Int      @default(0)
  category   Category @relation(fields: [categoryId], references: [id])
  menu       Menu     @relation(fields: [menuId], references: [id])

  @@id([menuId, categoryId])
  @@index([categoryId], map: "MenuCategory_categoryId_fkey")
}

model Listing {
  id                  String               @id
  merchantId          String
  name                String
  description         String
  priceInCents        Int
  published           Boolean              @default(false)
  Merchant            Merchant             @relation(fields: [merchantId], references: [id])
  ListingCategory     ListingCategory[]
  listingFilterValues ListingFilterValue[]
  ListingVariant      ListingVariant[]

  @@index([merchantId], map: "Listing_merchantId_fkey")
}

model ListingCategory {
  listingId  String
  categoryId String
  rank       Int      @default(0)
  Category   Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  Listing    Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)

  @@id([listingId, categoryId])
  @@index([categoryId], map: "ListingCategory_categoryId_fkey")
}

model Filter {
  id         String        @id
  filterId   String
  merchantId String
  name       String
  merchant   Merchant      @relation(fields: [merchantId], references: [id])
  values     FilterValue[]

  @@index([merchantId], map: "Filter_merchantId_fkey")
}

model FilterValue {
  id                  String               @id
  filterId            String
  value               String
  filter              Filter               @relation(fields: [filterId], references: [id])
  listingFilterValues ListingFilterValue[]

  @@index([filterId], map: "FilterValue_filterId_fkey")
}

model ListingVariant {
  id        String  @id
  listingId String
  name      String
  isDefault Boolean
  Listing   Listing @relation(fields: [listingId], references: [id])

  @@index([listingId], map: "ListingVariant_listingId_fkey")
}

model ListingFilterValue {
  listingId     String
  filterValueId String
  filterValue   FilterValue @relation(fields: [filterValueId], references: [id])
  listing       Listing     @relation(fields: [listingId], references: [id])

  @@id([listingId, filterValueId])
  @@index([filterValueId], map: "ListingFilterValue_filterValueId_fkey")
}
